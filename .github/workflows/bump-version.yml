# .github/workflows/bump-version.yml
name: Bump Version and Release

on:
  push:
    branches:
      - master
      - main

jobs:
  bump-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Configure Git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
      
      - name: Run version bump
        run: |
          python bump.py
          
      - name: Check if version changed
        id: check_changes
        run: |
          if [[ -n "$(git status --porcelain VERSION)" ]]; then
            echo "VERSION_CHANGED=true" >> $GITHUB_OUTPUT
            echo "NEW_VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit and push if changed
        if: steps.check_changes.outputs.VERSION_CHANGED == 'true'
        run: |
          git add VERSION
          git commit -m "bump: version update to $(cat VERSION)"
          git push
      
      - name: Create and push tag
        if: steps.check_changes.outputs.VERSION_CHANGED == 'true'
        run: |
          VERSION=$(cat VERSION)
          git tag -a "v${VERSION}" -m "Release version ${VERSION}"
          git push origin "v${VERSION}"

      - name: Build package
        if: steps.check_changes.outputs.VERSION_CHANGED == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          python -m build

      - name: Publish to PyPI
        if: steps.check_changes.outputs.VERSION_CHANGED == 'true'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*

      - name: Create GitHub Release
        if: steps.check_changes.outputs.VERSION_CHANGED == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.check_changes.outputs.NEW_VERSION }}"
          name: "Release v${{ steps.check_changes.outputs.NEW_VERSION }}"
          draft: false
          prerelease: false
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Handle errors
        if: failure()
        run: |
          echo "Error occurred in version bump workflow"
          exit 1